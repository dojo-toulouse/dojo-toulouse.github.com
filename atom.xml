<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Le blog des artisans logiciels toulousains]]></title>
  <link href="http://dojo-toulouse.github.com/atom.xml" rel="self"/>
  <link href="http://dojo-toulouse.github.com/"/>
  <updated>2013-03-17T16:28:17+01:00</updated>
  <id>http://dojo-toulouse.github.com/</id>
  <author>
    <name><![CDATA[Les artisans logiciels toulousains]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[1er rendez-vous club de lecture]]></title>
    <link href="http://dojo-toulouse.github.com/blog/2013/03/11/1er-rendez-vous-club-de-lecture/"/>
    <updated>2013-03-11T22:23:00+01:00</updated>
    <id>http://dojo-toulouse.github.com/blog/2013/03/11/1er-rendez-vous-club-de-lecture</id>
    <content type="html"><![CDATA[<p>Pour ce premier rendez-vous du club de lecture des artisans logiciels toulousains (ALS), nous avions décidé de porter notre attention sur les deux premiers chapitres du livre <a href="http://martinfowler.com/books/refactoring.html">Refactoring : Improving the Design of Existing Code</a> de Martin Fowler.</p>

<p>Nous avons apprécié la forme particulièrement pédagogique du premier chapitre consistant à illustrer les mécanismes du &#8220;refactoring&#8221; à l&#8217;aide d&#8217;un exemple. Exemple fort bien choisi car il n&#8217;est ni trop simple pour être un cas d&#8217;école, ni trop compliqué au risque de perdre le lecteur. A l&#8217;aide de cet exemple, Martin Fowler introduit les notions fondamentales du &#8220;refactoring&#8221; de façon fort pragmatique. Cet exemple de &#8220;refactoring&#8221; n&#8217;est pas gratuit car il est guidé par la nécessité d&#8217;ajouter des fonctionnalités. Il démontre alors que le &#8220;refactoring&#8221; lui permet d&#8217;obtenir une meilleure compréhension du code existant mais surtout d&#8217;augmenter sa lisibilité et maintenabilité. Le second chapitre est un peu plus théorique, il aborde les questions suivantes :</p>

<ul>
<li>Pourquoi devrions-nous &#8220;refactorer&#8221; le code ?</li>
<li>Quand devons-nous &#8220;refactorer&#8221; ?</li>
<li>Pourquoi le &#8220;refactoring&#8221; fonctionne-t-il ?</li>
<li>&#8230;</li>
</ul>


<p>Peu (voire aucune) critique n&#8217;a été formulée à l&#8217;encontre du second chapitre. Les débats ont plutôt porté sur la façon d&#8217;introduire ou de promouvoir cette pratique sur le lieu de travail.</p>

<ul>
<li> Quels freins peuvent être rencontrés en voulant introduire cette pratique ?</li>
<li> Comment convaincre les managers de l&#8217;utilité du &#8220;refactoring&#8221; ?</li>
</ul>


<p>Personnellement, je pense qu&#8217;une partie des réponses se trouve au sein de ce second chapitre. Cela montre un réel intérêt pour cette approche succinctement développée au cours de ces deux chapitres.</p>

<p>Le second chapitre aborde d&#8217;autres aspects notamment la possibilité de réaliser des opérations de refactoring lors de la revue de code. Il semble effectivement que ce soit un moment à considérer pour mettre en oeuvre ce type de pratique.</p>

<p>Bien entendu les nombreuses discussions ne se sont pas arrêtées à ces quelques aspects ; voir ci-dessous ce mind mapping synthétisant les sujets abordés. Merci à Ludovic Pradel pour cette carte.</p>

<p><a href="http://dojo-toulouse.github.com/static/images/LectureRefactoring.jpeg"><img src="http://dojo-toulouse.github.com/static/images/LectureRefactoring.jpeg"></a></p>

<p>Nous avons donc décidé de poursuivre la lecture de ce livre jusqu&#8217;au chapitre 6 inclus pour le second rendez-vous de ce club de lecture.</p>

<p>Le deuxième rendez-vous est fixé au lundi 15 avril à 18h30 au bar la Tireuse, d&#8217;ici là bonne lecture à tous.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Dojo Scala #2]]></title>
    <link href="http://dojo-toulouse.github.com/blog/2013/03/04/coding-dojo-scala-number-2/"/>
    <updated>2013-03-04T15:58:00+01:00</updated>
    <id>http://dojo-toulouse.github.com/blog/2013/03/04/coding-dojo-scala-number-2</id>
    <content type="html"><![CDATA[<p>Pour ce second coding dojo Scala, nous nous sommes retrouvés à 9 personnes, avec seulement Arnaud et moi qui avions déjà participés à la première édition.</p>

<p><img class="right" src="http://yfrog.com/scaled/landing/877/qrvfy.jpg" width="400"></p>

<p>Sur les 9 personnes, seulement 4 personnes avaient déjà fait un peu de Scala, ce qui n&#8217;a pas empêché d&#8217;avoir des discussions super intéressantes. Nous avions des gens provenant de Python, Ruby, Java, .net et aussi iOS !</p>

<p>Finalement, on a refait le même exercice que la dernière fois, à savoir le <code>KataStringCalculator</code> en mode <a href="http://codingdojo.org/cgi-bin/wiki.pl?RandoriKata">randori</a>, et ça n&#8217;a pas du tout donné le même résultat, comme quoi, les coding dojos, c&#8217;est comme les boites de chocolat dans Forrest Gump, on ne sait jamais vraiment ce que ça va donner :-)</p>

<p>Lors de la session d&#8217;aujourd&#8217;hui, j&#8217;ai particulièrement aprécié le fait qu&#8217;on a pu voir certaines particularités de Scala (inférence de type, pattern matching, quelques fonctions sur les collections).</p>

<p>Si vous souhaitez vous exercer en Scala, les sources du Kata sont disponibles ici : <a href="https://github.com/dojo-toulouse/ScalaKataStringCalculator">https://github.com/dojo-toulouse/ScalaKataStringCalculator</a></p>

<p><img class="left" src="https://pbs.twimg.com/media/BEg4r86CAAAv_zg.jpg:small"></p>

<p>Le résultat final est disponible sur la <a href="https://github.com/dojo-toulouse/ScalaKataStringCalculator/tree/20130304">branche &#8220;20130304&#8221; de Github</a> et je pense que c&#8217;est super intéressant d&#8217;aller voir les implémentations des deux sessions, tellement c&#8217;est différent.</p>

<p>Merci encore à Olivier, Ludovic, Jean-François, Arnaud, Dimitri, les 2 Guillaume, Aboussoror et Frédéric pour leur participation !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Dojo PHP #2]]></title>
    <link href="http://dojo-toulouse.github.com/blog/2013/02/18/coding-dojo-php-number-2/"/>
    <updated>2013-02-18T15:04:00+01:00</updated>
    <id>http://dojo-toulouse.github.com/blog/2013/02/18/coding-dojo-php-number-2</id>
    <content type="html"><![CDATA[<p>Une douzaine de personnes se sont retrouvées pour un coding dojo en PHP organisé par <a href="https://twitter.com/AFUP_Toulouse">l&#8217;AFUP</a>.</p>

<p><a href="http://twitter.com/avernois">Antoine</a> a animé cet atelier dont le thème était le <code>KataMarsRover</code>. Si vous souhaitez vous aussi vous entraîner en PHP avec ce kata, vous pouvez cloner le repository : <a href="https://github.com/dojo-toulouse/kata_mars_rover-php">https://github.com/dojo-toulouse/kata_mars_rover-php</a></p>

<p>Le code final du coding dojo est disponible sur la <a href="https://github.com/dojo-toulouse/kata_mars_rover-php/tree/2013.02.18-dojo_afup">branche &#8220;2013.02.18-dojo_afup&#8221; sur Github</a>.</p>

<p>Et un grand merci à <a href="http://www.tau.so/">Tau</a> pour l&#8217;accueil !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Dojo Scala #1]]></title>
    <link href="http://dojo-toulouse.github.com/blog/2013/02/08/coding-dojo-scala-number-1/"/>
    <updated>2013-02-08T14:57:00+01:00</updated>
    <id>http://dojo-toulouse.github.com/blog/2013/02/08/coding-dojo-scala-number-1</id>
    <content type="html"><![CDATA[<p>Pour ce premier coding dojo en Scala, nous nous sommes retrouvés à 10 personnes, dont à peu près la moitié qui n&#8217;avait jamais écrit de <code>Hello World !</code> en Scala (il y avait même une personne qui s&#8217;est inscrite au Dojo et qui est ensuite allée voir sur Wikipédia ce qu&#8217;était Scala…).</p>

<p><img class="right" src="https://pbs.twimg.com/media/BClHEyjCIAAl2uU.jpg:small"></p>

<p>Nous avions donc à faire à des Rubyistes (un seul ?), des Javaistes (beaucoup) qui étaient curieux de voir à quoi pouvait bien ressembler Scala.</p>

<p>Pour ma part, c&#8217;était mon premier conding dojo en tant qu&#8217;animateur.</p>

<p>L&#8217;exercice était le <code>KataStringCalculator</code> en mode <a href="http://codingdojo.org/cgi-bin/wiki.pl?RandoriKata">randori</a>.</p>

<p>Avant même d&#8217;attaquer le Scala, le premier problème pour pas mal de participants a été de savoir utiliser les touches du Mac ;-)</p>

<p>Nous avons eu aussi quelques soucis pour utiliser <code>sbt</code> qui n&#8217;arrêter pas de faire des <code>OutOfMemoryException</code> mais ça devrait être réglé pour la prochaine fois (mea culpa).</p>

<p>Au final, nous avons tous passé un bon moment même si sur la fin, les pros sur Scala sont un peu partis en cacahuètes sur un refactoring ;-)</p>

<p>Si vous souhaitez vous exercer en Scala, les sources du Kata sont disponibles ici : <a href="https://github.com/dojo-toulouse/ScalaKataStringCalculator">https://github.com/dojo-toulouse/ScalaKataStringCalculator</a></p>

<p>Le résultat final est disponible sur la <a href="https://github.com/dojo-toulouse/ScalaKataStringCalculator/tree/20130208">branche &#8220;20130208&#8221; de Github</a> mais nous avons bloqué sur un problème et les tests de passent plus&#8230;</p>

<p>Merci à tous les participants : Leonardo, Joël, Robin, Baptiste, Lolo, Arnaud, Antoine, Didier, Bert et moi même !</p>

<p>Et un grand merci à <a href="http://ekito.fr">ekito</a> pour l&#8217;accueil.</p>
]]></content>
  </entry>
  
</feed>
